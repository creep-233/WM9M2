Texture2D tex : register(t0);          
SamplerState samplerLinear : register(s0); 

struct PS_INPUT {
    float4 Pos : SV_POSITION;   
    float3 Normal : NORMAL;     
    float3 Tangent : TANGENT;   
    float2 TexCoords : TEXCOORD; 
};

struct GBUFFER {
    float4 colour : SV_TARGET0;    //colour
  //  float4 normal : SV_TARGET1;    //normal mapping
 //   float4 depth : SV_TARGET2;    //shadow
    // Maybe need more channels (like normal for normal mapping, depth for shadow check?)
    ////////////////////////////////////////////TODOTODOTODO////////////////////////////////////

};

GBUFFER PS(PS_INPUT input) {
    GBUFFER gbuffer;

    float4 colour = tex.Sample(samplerLinear, input.TexCoords);
    // Not draw them directly, but send them to G-buffer
    // colour
    gbuffer.colour = colour;

    // for normal mapping, looks like need more channels?
   // gbuffer.normal = normalize(input.Normal);

    // depth
   // gbuffer.depth = input.Pos.z;

    return gbuffer;
}