Texture2D tex : register(t0);        
SamplerState samplerLinear : register(s0);  

struct PS_INPUT {
    float4 Pos : SV_POSITION;
    float4 LightPos : TEXCOORD0;
};

float4 PS_Shadow(PS_INPUT input) : SV_TARGET
{
   
    float3 lightClipCoords = input.LightPos.xyz / input.LightPos.w;


    float2 shadowUV = lightClipCoords.xy * 0.5f + float2(0.5f, 0.5f);

    // Check if the coordinates are within the shadow map bounds
    if (shadowUV.x < 0.0f || shadowUV.x > 1.0f ||
        shadowUV.y < 0.0f || shadowUV.y > 1.0f) 
    {
        
        return float4(1.0, 1.0, 1.0, 1.0);
    }

    // Sample the depth
    float shadowDepth = tex.Sample(samplerLinear, shadowUV).r;
    // Compare current depth with shadow depth
    float currentDepth = lightClipCoords.z;
    float bias = 0.005f; // can reduce acne
    float shadowFactor = (currentDepth > shadowDepth + bias) ? 0.0f : 1.0f;

    return float4(shadowFactor, shadowFactor, shadowFactor, 1.0f);
}
